Sub InsertWeatherSlide()
    Dim xml As Object
    Dim url As String
    Dim stationID As String
    stationID = "KDAY"
    url = "https://forecast.weather.gov/xml/current_obs/" & stationID & ".xml"

    Set xml = CreateObject("MSXML2.DOMDocument.6.0")
    xml.async = False
    xml.Load url

    If xml.ParseError.ErrorCode <> 0 Then
        MsgBox "XML load error: " & xml.ParseError.Reason
        Exit Sub
    End If

    Dim location As String: location = GetXmlValue(xml, "location")
    Dim temperature As String: temperature = GetXmlValue(xml, "temperature_string")
    Dim weather As String: weather = GetXmlValue(xml, "weather")
    Dim humidity As String: humidity = GetXmlValue(xml, "relative_humidity") & "%"
    Dim wind As String: wind = GetXmlValue(xml, "wind_string")
    Dim obsTime As String: obsTime = GetXmlValue(xml, "observation_time")

    Dim sld As Slide
    Set sld = ActivePresentation.Slides(1)

    SafeSetText sld, "WeatherForBox", location
    SafeSetText sld, "TimeBox", obsTime
    SafeSetText sld, "TemperatureBox", temperature
    SafeSetText sld, "WeatherBox", weather
    SafeSetText sld, "HumidityBox", "Humidity: " & humidity
    SafeSetText sld, "WindBox", "Wind: " & wind

    Call ClearOldForecastImages(sld)
    Call InsertForecastData(sld)
    Call StartCarouselLoop
End Sub

Sub ClearOldForecastImages(sld As Slide)
    Dim shp As Shape
    Dim i As Integer
    For i = sld.Shapes.Count To 1 Step -1
        Set shp = sld.Shapes(i)
        If InStr(shp.Name, "ForecastImage") > 0 Then
            shp.Delete
        End If
    Next i
End Sub

Sub InsertForecastData(sld As Slide)
    Dim xml As Object
    Dim lat As String, lon As String
    lat = "40.1445": lon = "-84.2427"

    Dim url As String
    url = "https://forecast.weather.gov/MapClick.php?lat=" & lat & "&lon=" & lon & "&FcstType=dwml"

    Set xml = CreateObject("MSXML2.DOMDocument.6.0")
    xml.async = False
    xml.Load url

    If xml.ParseError.ErrorCode <> 0 Then
        MsgBox "Forecast XML load error: " & xml.ParseError.Reason
        Exit Sub
    End If

    Dim texts As Object
    Set texts = xml.getElementsByTagName("text")
    Dim timeNodes As Object
    Set timeNodes = xml.getElementsByTagName("start-valid-time")

    If texts Is Nothing Or texts.Length = 0 Then
        MsgBox "No forecast data found."
        Exit Sub
    End If

    Dim isDaytime As Boolean
    isDaytime = (Hour(Now) >= 6 And Hour(Now) < 18)

    Dim i As Integer
    For i = 0 To 6
        If i >= texts.Length Then Exit For

        Dim wx As String: wx = texts.Item(i).text
        Dim dayName As String
        If Not timeNodes Is Nothing And i < timeNodes.Length Then
            dayName = timeNodes.Item(i).Attributes.getNamedItem("period-name").text
        Else
            dayName = WeekdayName((Weekday(Date) + i - 1) Mod 7 + 1, True)
        End If

        Dim emojiUrl As String: emojiUrl = ""
        Dim wxLower As String: wxLower = LCase(wx)

        If InStr(wxLower, "snow") > 0 Or InStr(wxLower, "flurries") > 0 Then
            emojiUrl = IIf(isDaytime, "https://img.icons8.com/?size=100&id=qlJRoffslNg7&format=png&color=000000", "https://img.icons8.com/?size=100&id=qlJRoffslNg7&format=png&color=000000")
        ElseIf InStr(wxLower, "clear") > 0 Then
            emojiUrl = IIf(isDaytime, "https://img.icons8.com/?size=100&id=8EUmYhfLPTCF&format=png&color=000000", "https://img.icons8.com/?size=100&id=Opvt5B6x4fI4&format=png&color=000000")
        ElseIf InStr(wxLower, "rain") > 0 Or InStr(wxLower, "showers") > 0 Then
            emojiUrl = IIf(isDaytime, "https://img.icons8.com/?size=100&id=R1kPtXvDMnWj&format=png&color=000000", "https://img.icons8.com/?size=100&id=R1kPtXvDMnWj&format=png&color=000000")
        ElseIf InStr(wxLower, "cloud") > 0 Then
            emojiUrl = IIf(isDaytime, "https://img.icons8.com/?size=100&id=zIVmoh4T8wh7&format=png&color=000000", "https://img.icons8.com/?size=100&id=VT8HlhlnhUwL&format=png&color=000000")
        ElseIf InStr(wxLower, "storm") > 0 Or InStr(wxLower, "thunder") > 0 Then
            emojiUrl = IIf(isDaytime, "https://img.icons8.com/?size=100&id=6AAyqKfBlzoB&format=png&color=000000", "https://img.icons8.com/?size=100&id=6AAyqKfBlzoB&format=png&color=000000")
        ElseIf InStr(wxLower, "fog") > 0 Or InStr(wxLower, "haze") > 0 Or InStr(wxLower, "mist") > 0 Then
            emojiUrl = IIf(isDaytime, "https://img.icons8.com/?size=100&id=39432&format=png&color=000000", "https://img.icons8.com/?size=100&id=7tEHHH5dn7A3&format=png&color=000000")
        ElseIf InStr(wxLower, "hail") > 0 Or InStr(wxLower, "sleet") > 0 Then
            emojiUrl = IIf(isDaytime, "https://img.icons8.com/?size=100&id=39329&format=png&color=000000", "https://img.icons8.com/?size=100&id=39329&format=png&color=000000")
        ElseIf InStr(wxLower, "sun") > 0 Then
            emojiUrl = IIf(isDaytime, "https://img.icons8.com/?size=100&id=8EUmYhfLPTCF&format=png&color=000000", "https://img.icons8.com/?size=100&id=8EUmYhfLPTCF&format=png&color=000000")
        ElseIf InStr(wxLower, "overcast") > 0 Or InStr(wxLower, "cast") > 0 Then
            emojiUrl = IIf(isDaytime, "https://img.icons8.com/?size=100&id=W8fUZZSmXssu&format=png&color=000000", "https://img.icons8.com/?size=100&id=W8fUZZSmXssu&format=png&color=000000")
        End If

        SafeSetText sld, "Day" & (i + 1) & "Box", dayName
        SafeSetText sld, "Day" & (i + 1) & "CondBox", wx

        Dim groupName As String
        groupName = "Day" & (i + 1) & "Group"
        
        ' Remove any existing picture from the group
        On Error Resume Next
        Dim g As Shape
        Set g = sld.Shapes(groupName)
        If Not g Is Nothing Then
            Dim child As Shape
            Dim k As Integer
            For k = g.groupItems.Count To 1 Step -1
                Set child = g.groupItems(k)
                If child.Type = msoPicture Then
                    child.Delete
                End If
            Next k
        End If
        On Error GoTo 0
        
        ' Add new picture and group it with existing group
        If emojiUrl <> "" Then
            Dim newImg As Shape
            Set newImg = sld.Shapes.AddPicture(emojiUrl, msoFalse, msoCTrue, 60, 420, 50, 50)
            newImg.Name = "ForecastImage" & (i + 1)
            
            ' Ungroup the existing group, re-group with new image
            If Not g Is Nothing Then
                Dim names() As String
                Dim x As Integer
                ReDim names(g.groupItems.Count)
        
                For x = 1 To g.groupItems.Count
                    names(x - 1) = g.groupItems(x).Name
                Next x
        
                g.Ungroup
                ReDim Preserve names(UBound(names) + 1)
                names(UBound(names)) = newImg.Name
        
                Dim newGroup As Shape
                Set newGroup = sld.Shapes.Range(names).Group
                newGroup.Name = groupName
                newGroup.Visible = IIf(i = 0, msoTrue, msoFalse)
            End If
        End If


        ' Make group visible or hidden
        Dim groupName As String
        groupName = "Day" & (i + 1) & "Group"

        On Error Resume Next
        With sld.Shapes(groupName)
            .Visible = IIf(i = 0, msoTrue, msoFalse)
        End With
        On Error GoTo 0
    Next i
End Sub

Sub StartCarouselLoop()
    Do
        Call AnimateForecastGroups
    Loop
End Sub

Sub AnimateForecastGroups()
    Dim sld As Slide
    Set sld = ActivePresentation.Slides(1)
    Dim i As Integer
    For i = 1 To 7
        Dim groupName As String: groupName = "Day" & i & "Group"
        Dim shp As Shape
        On Error Resume Next
        Set shp = sld.Shapes(groupName)
        On Error GoTo 0
        If Not shp Is Nothing Then
            Dim seq As Sequence
            Set seq = sld.TimeLine.MainSequence
            shp.Visible = msoTrue
            seq.AddEffect shp, msoAnimEffectFade, , msoAnimTriggerAfterPrevious
            Pause 5
            shp.Visible = msoFalse
            
        End If
    Next i
End Sub

Sub Pause(seconds As Double)
    Dim endTime As Double: endTime = Timer + seconds
    Do While Timer < endTime
        DoEvents
    Loop
End Sub

Function GetXmlValue(xml As Object, tagName As String) As String
    Dim node As Object
    Set node = xml.SelectSingleNode("//" & tagName)
    If Not node Is Nothing Then
        GetXmlValue = node.text
    Else
        GetXmlValue = "N/A"
    End If
End Function

Sub SafeSetText(sld As Slide, shapeName As String, text As String)
    Dim shp As Shape
    Set shp = sld.Shapes(shapeName)
    If Not shp Is Nothing Then
        shp.TextFrame.TextRange.text = text
    End If
End Sub

